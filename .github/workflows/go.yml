name: Go

on:
  schedule:
    - cron: '0 0 * * *'

  push:
    branches: [ '**' ]

  pull_request:
    branches: [ '**' ]

  workflow_dispatch:

jobs:

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      # fail-fast: true
      fail-fast: false
      matrix:
        go-version: [ 1.18 ]
        check-latest: [ false ]
        include:
          ## TODO: Does this work for testing against the "latest" version vs. predefined versions?
          - version: ''
            check-latest: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # https://github.com/actions/setup-go
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: ${{ matrix.check-latest }}
          cache: true

      ## TODO: Shouldn't we build for ALL supported architectures,
      ##       considering we want to release binaries for them anyway?
      ## TODO: Only build for the active architecture?
      - name: Build
        # run: make build
        run: |
          go version
          go build -v ./...

      ## TODO: These are still failing, fix the tests!
      - name: Test
        # run: make test
        run: |
          go version
          go test -v ./...
